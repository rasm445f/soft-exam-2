{"definitions":{"big.Int":{"type":"object"},"db.AddItemParams":{"properties":{"customerId":{"type":"integer"},"name":{"type":"string"},"price":{"type":"number"},"quantity":{"type":"integer"},"restaurantId":{"type":"integer"}},"type":"object"},"generated.CreateCustomerParams":{"properties":{"email":{"type":"string"},"name":{"type":"string"},"password":{"type":"string"},"phonenumber":{"type":"string"},"street_address":{"type":"string"},"zip_code":{"type":"integer"}},"type":"object"},"generated.CreateDeliveryAgentParams":{"properties":{"availability":{"type":"boolean"},"contactinfo":{"type":"string"},"fullname":{"type":"string"},"rating":{"type":"number"}},"type":"object"},"generated.CreateFeedbackParams":{"properties":{"comment":{"type":"string"},"customerid":{"type":"integer"},"deliveryagentrating":{"type":"integer"},"orderid":{"type":"integer"},"restaurantrating":{"type":"integer"}},"type":"object"},"generated.Customer":{"properties":{"addressid":{"type":"integer"},"email":{"type":"string"},"id":{"type":"integer"},"name":{"type":"string"},"password":{"type":"string"},"phonenumber":{"type":"string"}},"type":"object"},"generated.Deliveryagent":{"properties":{"availability":{"type":"boolean"},"contactinfo":{"type":"string"},"fullname":{"type":"string"},"id":{"type":"integer"},"rating":{"type":"number"}},"type":"object"},"generated.Feedback":{"properties":{"comment":{"type":"string"},"customerid":{"type":"integer"},"deliveryagentrating":{"type":"integer"},"id":{"type":"integer"},"orderid":{"type":"integer"},"restaurantrating":{"type":"integer"}},"type":"object"},"generated.Menuitem":{"properties":{"description":{"type":"string"},"id":{"type":"integer"},"name":{"type":"string"},"price":{"$ref":"#/definitions/pgtype.Numeric"},"restaurantid":{"type":"integer"}},"type":"object"},"generated.Order":{"properties":{"bonusid":{"type":"integer"},"comment":{"type":"string"},"customerid":{"type":"integer"},"deliveryagentid":{"type":"integer"},"feeid":{"type":"integer"},"id":{"type":"integer"},"paymentid":{"type":"integer"},"restaurantid":{"type":"integer"},"status":{"type":"string"},"timestamp":{"type":"string"},"totalamount":{"type":"number"},"vatamount":{"type":"number"}},"type":"object"},"generated.Restaurant":{"properties":{"address":{"type":"string"},"category":{"type":"string"},"id":{"type":"integer"},"name":{"type":"string"},"rating":{"$ref":"#/definitions/pgtype.Numeric"},"zip_code":{"type":"integer"}},"type":"object"},"handlers.MenuItemSelection":{"properties":{"customerId":{"example":1,"type":"integer"},"name":{"example":"Cheese Burger","type":"string"},"price":{"example":10,"type":"number"},"quantity":{"example":2,"type":"integer"},"restaurantId":{"example":10,"type":"integer"}},"type":"object"},"handlers.PublishShoppingCartRequest":{"properties":{"comment":{"example":"No vegetables","type":"string"}},"type":"object"},"handlers.SelectItemParams":{"properties":{"customerId":{"example":1,"type":"integer"},"id":{"type":"integer"},"quantity":{"example":2,"type":"integer"},"restaurantId":{"example":10,"type":"integer"}},"type":"object"},"handlers.UpdateCustomerWithAddress":{"description":"Update customer details including name, email, and address information.","properties":{"city":{"example":"New York","type":"string"},"email":{"example":"john.doe@example.com","type":"string"},"name":{"example":"John Doe","type":"string"},"password":{"example":"Password123!","type":"string"},"phonenumber":{"example":"1234567890","type":"string"},"street_address":{"example":"123 Main St","type":"string"},"zip_code":{"example":12345,"type":"integer"}},"type":"object"},"handlers.UpdateOrderStatusRequest":{"properties":{"status":{"example":"Pending/On its way/Delivered","type":"string"}},"type":"object"},"handlers.UpdateOrderStatusRequestWithDeliveryAgentId":{"properties":{"id":{"type":"integer"},"status":{"example":"Pending/On its way/Delivered","type":"string"}},"type":"object"},"handlers.UpdateQuantityRequest":{"properties":{"quantity":{"type":"integer"}},"type":"object"},"pgtype.InfinityModifier":{"enum":[1,0,-1],"type":"integer","x-enum-varnames":["Infinity","Finite","NegativeInfinity"]},"pgtype.Numeric":{"properties":{"exp":{"type":"integer"},"infinityModifier":{"$ref":"#/definitions/pgtype.InfinityModifier"},"int":{"$ref":"#/definitions/big.Int"},"naN":{"type":"boolean"},"valid":{"type":"boolean"}},"type":"object"}},"host":"localhost:8081","info":{"contact":{},"description":"This is the API documentation for the Customer Service.","title":"Customer Service API","version":"1.0"},"paths":{"/api/categories":{"get":{"description":"Fetches a list of all unique categories from the restaurant","produces":["application/json"],"responses":{"200":{"description":"OK","schema":{"items":{"type":"string"},"type":"array"}}},"summary":"Get all categories","tags":["categories"]}},"/api/customer":{"get":{"description":"Fetches a list of all customers from the database","produces":["application/json"],"responses":{"200":{"description":"OK","schema":{"items":{"$ref":"#/definitions/generated.Customer"},"type":"array"}}},"summary":"Get all customers","tags":["customers"]},"post":{"consumes":["application/json"],"description":"Creates a new customer entry in the database","parameters":[{"description":"Customer object","in":"body","name":"customer","required":true,"schema":{"$ref":"#/definitions/generated.CreateCustomerParams"}}],"produces":["application/json"],"responses":{"201":{"description":"Created","schema":{"$ref":"#/definitions/generated.Customer"}},"400":{"description":"Bad request","schema":{"type":"string"}},"500":{"description":"Internal server error","schema":{"type":"string"}}},"summary":"Create a new customer","tags":["customers"]}},"/api/customer/menu/select":{"post":{"consumes":["application/json"],"description":"Select Menu Item","parameters":[{"description":"Menu item selection details","in":"body","name":"customer","required":true,"schema":{"$ref":"#/definitions/handlers.MenuItemSelection"}}],"produces":["application/json"],"responses":{"201":{"description":"Menu item successfully selected","schema":{"$ref":"#/definitions/handlers.MenuItemSelection"}},"400":{"description":"Bad request","schema":{"type":"string"}},"500":{"description":"Internal server error","schema":{"type":"string"}}},"summary":"Select Menuitem","tags":["customers"]}},"/api/customer/{id}":{"delete":{"description":"Deletes a customer based on the id from the database","parameters":[{"description":"Customer ID","in":"path","name":"id","required":true,"type":"string"}],"produces":["application/json"],"responses":{"200":{"description":"Customer deleted","schema":{"type":"string"}},"400":{"description":"Bad request","schema":{"type":"string"}},"404":{"description":"Customer not found","schema":{"type":"string"}}},"summary":"Delete customer","tags":["customers"]},"get":{"description":"Fetches a customer based on the id from the database","parameters":[{"description":"Customer ID","in":"path","name":"id","required":true,"type":"string"}],"produces":["application/json"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/generated.Customer"}}},"summary":"Get customer","tags":["customers"]},"patch":{"consumes":["application/json"],"description":"Updates a customer's details based on the ID provided in the URL path. This may include personal information as well as optional address updates.","parameters":[{"description":"Customer ID","in":"path","name":"id","required":true,"type":"integer"},{"description":"Updated customer details","in":"body","name":"customer","required":true,"schema":{"$ref":"#/definitions/handlers.UpdateCustomerWithAddress"}}],"produces":["application/json"],"responses":{"200":{"description":"Customer updated successfully","schema":{"additionalProperties":{"type":"string"},"type":"object"}},"400":{"description":"Invalid input","schema":{"additionalProperties":{"type":"string"},"type":"object"}},"404":{"description":"Customer not found","schema":{"additionalProperties":{"type":"string"},"type":"object"}},"500":{"description":"Internal server error","schema":{"additionalProperties":{"type":"string"},"type":"object"}}},"summary":"Update a customer","tags":["customers"]}},"/api/delivery-agent":{"get":{"description":"Fetches a list of all deliveryAgent from the database","produces":["application/json"],"responses":{"200":{"description":"OK","schema":{"items":{"$ref":"#/definitions/generated.Deliveryagent"},"type":"array"}}},"summary":"Get all deliveryAgent","tags":["deliveryAgent"]},"post":{"consumes":["application/json"],"description":"Creates a new deliveryAgent entry in the database","parameters":[{"description":"DeliveryAgent object","in":"body","name":"deliveryAgent","required":true,"schema":{"$ref":"#/definitions/generated.CreateDeliveryAgentParams"}}],"produces":["application/json"],"responses":{"201":{"description":"Created","schema":{"$ref":"#/definitions/generated.Deliveryagent"}},"400":{"description":"Bad request","schema":{"type":"string"}},"500":{"description":"Internal server error","schema":{"type":"string"}}},"summary":"Create a new deliveryAgent","tags":["deliveryAgent"]}},"/api/delivery-agent/{deliveryAgentId}":{"get":{"description":"Fetches a deliveryAgent based on the id from the database","parameters":[{"description":"DeliveryAgent ID","in":"path","name":"deliveryAgentId","required":true,"type":"string"}],"produces":["application/json"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/generated.Deliveryagent"}},"400":{"description":"Bad request","schema":{"type":"string"}},"404":{"description":"DeliveryAgent not found","schema":{"type":"string"}}},"summary":"Get deliveryAgent by deliveryAgent id","tags":["deliveryAgent"]}},"/api/feedback":{"post":{"consumes":["application/json"],"description":"Creates a new feedback entry in the database","parameters":[{"description":"Feedback object","in":"body","name":"feedback","required":true,"schema":{"$ref":"#/definitions/generated.CreateFeedbackParams"}}],"produces":["application/json"],"responses":{"201":{"description":"Created","schema":{"$ref":"#/definitions/generated.Feedback"}},"400":{"description":"Bad request","schema":{"type":"string"}},"500":{"description":"Internal server error","schema":{"type":"string"}}},"summary":"Create a new feedback","tags":["feedbacks"]}},"/api/feedbacks":{"get":{"description":"Fetches a list of all feedbacks from the database","produces":["application/json"],"responses":{"200":{"description":"OK","schema":{"items":{"$ref":"#/definitions/generated.Feedback"},"type":"array"}}},"summary":"Get all feedbacks","tags":["feedbacks"]}},"/api/feedbacks/{orderId}":{"get":{"description":"Fetches a feedback based on the order id from the database","parameters":[{"description":"Order ID","in":"path","name":"orderId","required":true,"type":"string"}],"produces":["application/json"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/generated.Feedback"}},"400":{"description":"Bad request","schema":{"type":"string"}},"404":{"description":"Feedback not found","schema":{"type":"string"}}},"summary":"Get feedback by order id","tags":["feedbacks"]}},"/api/filter/{category}":{"get":{"description":"Fetches all restaurants for a given category","parameters":[{"description":"Restaurant Category","in":"path","name":"category","required":true,"type":"string"}],"produces":["application/json"],"responses":{"200":{"description":"OK","schema":{"items":{"$ref":"#/definitions/generated.Restaurant"},"type":"array"}}},"summary":"Filter restaurants by category","tags":["categories"]}},"/api/order/bonus/{orderId}":{"get":{"description":"calculates the order bonus","parameters":[{"description":"Order ID","in":"path","name":"orderId","required":true,"type":"string"}],"produces":["application/json"],"responses":{"200":{"description":"OK","schema":{"items":{"$ref":"#/definitions/generated.Order"},"type":"array"}}},"summary":"calculate order bonus","tags":["orders"]}},"/api/order/consume":{"get":{"description":"Consume the created order for customer","produces":["application/json"],"responses":{"200":{"description":"Order Consumed Successfully","schema":{"type":"string"}},"400":{"description":"Bad request","schema":{"type":"string"}},"500":{"description":"Internal server error","schema":{"type":"string"}}},"summary":"Consume Order for a Customer","tags":["order"]}},"/api/order/status-agent/{orderId}":{"patch":{"consumes":["application/json"],"description":"Updates the status of an order","parameters":[{"description":"Order ID","in":"path","name":"orderId","required":true,"type":"integer"},{"description":"New Order Status","in":"body","name":"status","required":true,"schema":{"$ref":"#/definitions/handlers.UpdateOrderStatusRequestWithDeliveryAgentId"}}],"produces":["application/json"],"responses":{"200":{"description":"Order status updated successfully","schema":{"type":"string"}},"404":{"description":"Order not found","schema":{"type":"string"}}},"summary":"Update Order Status","tags":["orders"]}},"/api/order/status/{orderId}":{"patch":{"consumes":["application/json"],"description":"Updates the status of an order","parameters":[{"description":"Order ID","in":"path","name":"orderId","required":true,"type":"integer"},{"description":"New Order Status","in":"body","name":"status","required":true,"schema":{"$ref":"#/definitions/handlers.UpdateOrderStatusRequest"}}],"produces":["application/json"],"responses":{"200":{"description":"Order status updated successfully","schema":{"type":"string"}},"404":{"description":"Order not found","schema":{"type":"string"}}},"summary":"Update Order Status","tags":["orders"]}},"/api/orders":{"get":{"description":"Fetches a list of all orders from the database","produces":["application/json"],"responses":{"200":{"description":"OK","schema":{"items":{"$ref":"#/definitions/generated.Order"},"type":"array"}}},"summary":"Get all orders","tags":["orders"]}},"/api/orders/{id}":{"delete":{"description":"Deletes an order by its id from the database","parameters":[{"description":"Order ID","in":"path","name":"id","required":true,"type":"integer"}],"responses":{"200":{"description":"Order deleted successfully","schema":{"type":"string"}},"404":{"description":"Order not found","schema":{"type":"string"}}},"summary":"Delete an order","tags":["orders"]},"get":{"description":"Fetches an order based on the id from the database","parameters":[{"description":"Order ID","in":"path","name":"id","required":true,"type":"string"}],"produces":["application/json"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/generated.Order"}}},"summary":"Get order by id","tags":["orders"]}},"/api/restaurants":{"get":{"description":"Fetches a list of all restaurants from the database","produces":["application/json"],"responses":{"200":{"description":"OK","schema":{"items":{"$ref":"#/definitions/generated.Restaurant"},"type":"array"}}},"summary":"Get all restaurants","tags":["restaurants"]}},"/api/restaurants/menu/select":{"post":{"consumes":["application/json"],"description":"Select Menu Item","parameters":[{"description":"Menu item selection details","in":"body","name":"customer","required":true,"schema":{"$ref":"#/definitions/handlers.SelectItemParams"}}],"produces":["application/json"],"responses":{"201":{"description":"Menu item successfully selected","schema":{"$ref":"#/definitions/handlers.MenuItemSelection"}},"400":{"description":"Bad request","schema":{"type":"string"}},"500":{"description":"Internal server error","schema":{"type":"string"}}},"summary":"Select Menuitem","tags":["customers"]}},"/api/restaurants/{id}":{"get":{"description":"Fetches a restaurant based on the id from the database","parameters":[{"description":"Restaurant ID","in":"path","name":"id","required":true,"type":"string"}],"produces":["application/json"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/generated.Restaurant"}}},"summary":"Get restaurant by id","tags":["restaurants"]}},"/api/restaurants/{restaurantId}/menu-items":{"get":{"description":"Fetches all menu items associated with a specific restaurant ID","parameters":[{"description":"Restaurant ID","in":"path","name":"restaurantId","required":true,"type":"string"}],"produces":["application/json"],"responses":{"200":{"description":"OK","schema":{"items":{"$ref":"#/definitions/generated.Menuitem"},"type":"array"}}},"summary":"Get menu items by restaurant ID","tags":["menu_items"]}},"/api/restaurants/{restaurantId}/menu-items/{menuitemId}":{"get":{"description":"Fetches a menu item based on the restaurant and id from the database","parameters":[{"description":"Restaurant ID","in":"path","name":"restaurantId","required":true,"type":"string"},{"description":"Menu Item ID","in":"path","name":"menuitemId","required":true,"type":"string"}],"produces":["application/json"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/generated.Menuitem"}}},"summary":"Get menu item by restaurant and id","tags":["menu_items"]}},"/api/shopping":{"post":{"consumes":["application/json"],"description":"Add an item to the shopping cart","parameters":[{"description":"item object","in":"body","name":"item","required":true,"schema":{"$ref":"#/definitions/db.AddItemParams"}}],"produces":["application/json"],"responses":{"201":{"description":"Created","schema":{"$ref":"#/definitions/db.AddItemParams"}},"400":{"description":"Bad request","schema":{"type":"string"}},"500":{"description":"Internal server error","schema":{"type":"string"}}},"summary":"Add an item","tags":["shoppingCart"]}},"/api/shopping/consume":{"get":{"description":"Consumes the Shopping Cart's Menu Items for a Customer","produces":["application/json"],"responses":{"200":{"description":"Shopping Cart's Menu Items Consumed","schema":{"type":"string"}},"400":{"description":"Bad request","schema":{"type":"string"}},"500":{"description":"Internal server error","schema":{"type":"string"}}},"summary":"Consume the chosen Menu Items for a Customer","tags":["Broker"]}},"/api/shopping/publish/{customerId}":{"post":{"consumes":["application/json"],"description":"Selecting the cart for the specified customer with an optional comment","parameters":[{"description":"Customer ID","in":"path","name":"customerId","required":true,"type":"integer"},{"description":"Customer Comment (optional)","in":"body","name":"comment","required":true,"schema":{"$ref":"#/definitions/handlers.PublishShoppingCartRequest"}}],"produces":["application/json"],"responses":{"200":{"description":"Order Selected Successfully","schema":{"type":"string"}},"400":{"description":"Bad request","schema":{"type":"string"}},"500":{"description":"Internal server error","schema":{"type":"string"}}},"summary":"Publish a Customer's shopping cart to RabbitMQ to be consumed by the Order service with an optional Comment","tags":["Broker"]}},"/api/shopping/{customerId}":{"delete":{"consumes":["application/json"],"description":"Clears the cart for the specified customer","parameters":[{"description":"customer ID","in":"path","name":"customerId","required":true,"type":"integer"}],"produces":["application/json"],"responses":{"200":{"description":"cart cleared","schema":{"type":"string"}},"400":{"description":"Bad request","schema":{"type":"string"}},"500":{"description":"Internal server error","schema":{"type":"string"}}},"summary":"Clears the cart","tags":["shoppingCart"]}},"/api/shopping/{customerId}/{itemId}":{"patch":{"consumes":["application/json"],"description":"Update the quantity of an existing item in the shopping cart. If the quantity is set to 0, the item will be removed.","parameters":[{"description":"customer ID","in":"path","name":"customerId","required":true,"type":"integer"},{"description":"Item ID","in":"path","name":"itemId","required":true,"type":"integer"},{"description":"New quantity for the item","in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/handlers.UpdateQuantityRequest"}}],"produces":["application/json"],"responses":{"200":{"description":"Item updated successfully","schema":{"type":"string"}},"400":{"description":"Invalid input","schema":{"type":"string"}},"404":{"description":"Item not found","schema":{"type":"string"}},"500":{"description":"Internal server error","schema":{"type":"string"}}},"summary":"Update an item in the cart","tags":["shoppingCart"]}},"/api/shopping/{id}":{"get":{"description":"Fetches a list of items based on the customerId","parameters":[{"description":"customer ID","in":"path","name":"id","required":true,"type":"string"}],"produces":["application/json"],"responses":{"200":{"description":"Cart cleared","schema":{"type":"string"}},"400":{"description":"Bad request","schema":{"type":"string"}},"500":{"description":"Internal server error","schema":{"type":"string"}}},"summary":"View items for a customer","tags":["shoppingCart"]}}},"swagger":"2.0"}