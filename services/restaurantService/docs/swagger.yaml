definitions:
  big.Int:
    type: object
  generated.Menuitem:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        $ref: '#/definitions/pgtype.Numeric'
      restaurantid:
        type: integer
    type: object
  generated.Restaurant:
    properties:
      address:
        type: string
      category:
        type: string
      id:
        type: integer
      name:
        type: string
      rating:
        $ref: '#/definitions/pgtype.Numeric'
    type: object
  pgtype.InfinityModifier:
    enum:
    - 1
    - 0
    - -1
    type: integer
    x-enum-varnames:
    - Infinity
    - Finite
    - NegativeInfinity
  pgtype.Numeric:
    properties:
      exp:
        type: integer
      infinityModifier:
        $ref: '#/definitions/pgtype.InfinityModifier'
      int:
        $ref: '#/definitions/big.Int'
      naN:
        type: boolean
      valid:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /api/categories:
    get:
      description: Fetches a list of all unique categories from the restaurant
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: Get all categories
      tags:
      - categories
  /api/filter/{category}:
    get:
      description: Fetches all restaurants for a given category
      parameters:
      - description: Restaurant Category
        in: path
        name: category
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/generated.Restaurant'
            type: array
      summary: Filter restaurants by category
      tags:
      - categories
  /api/restaurants:
    get:
      description: Fetches a list of all restaurants from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/generated.Restaurant'
            type: array
      summary: Get all restaurants
      tags:
      - restaurants
  /api/restaurants/{id}:
    get:
      description: Fetches a restaurant based on the id from the database
      parameters:
      - description: Restaurant ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/generated.Restaurant'
      summary: Get restaurant by id
      tags:
      - restaurants
  /api/restaurants/{restaurantId}/menu-items:
    get:
      description: Fetches all menu items associated with a specific restaurant ID
      parameters:
      - description: Restaurant ID
        in: path
        name: restaurantId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/generated.Menuitem'
            type: array
      summary: Get menu items by restaurant ID
      tags:
      - menu_items
  /api/restaurants/{restaurantId}/menu-items/{menuitemId}:
    get:
      description: Fetches a menu item based on the restaurant and id from the database
      parameters:
      - description: Restaurant ID
        in: path
        name: restaurantId
        required: true
        type: string
      - description: Menu Item ID
        in: path
        name: menuitemId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/generated.Menuitem'
      summary: Get menu item by restaurant and id
      tags:
      - menu_items
swagger: "2.0"
