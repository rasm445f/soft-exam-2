{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/order/consume": {
            "get": {
                "description": "Consume the created order for customer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "View order for a customer",
                "responses": {
                    "200": {
                        "description": "Order Consume Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/orders": {
            "get": {
                "description": "Fetches a list of all orders from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Get all orders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/generated.Order"
                            }
                        }
                    }
                }
            }
        },
        "/api/orders/{id}": {
            "get": {
                "description": "Fetches an order based on the id from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Get order by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/generated.Order"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an order by its id from the database",
                "tags": [
                    "orders"
                ],
                "summary": "Delete an order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "big.Int": {
            "type": "object"
        },
        "generated.Order": {
            "type": "object",
            "properties": {
                "bonusid": {
                    "type": "integer"
                },
                "comment": {
                    "type": "string"
                },
                "customerid": {
                    "type": "integer"
                },
                "deliveryagentid": {
                    "type": "integer"
                },
                "feeid": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "paymentid": {
                    "type": "integer"
                },
                "restaurantid": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "totalamount": {
                    "$ref": "#/definitions/pgtype.Numeric"
                },
                "vatamount": {
                    "$ref": "#/definitions/pgtype.Numeric"
                }
            }
        },
        "pgtype.InfinityModifier": {
            "type": "integer",
            "enum": [
                1,
                0,
                -1
            ],
            "x-enum-varnames": [
                "Infinity",
                "Finite",
                "NegativeInfinity"
            ]
        },
        "pgtype.Numeric": {
            "type": "object",
            "properties": {
                "exp": {
                    "type": "integer"
                },
                "infinityModifier": {
                    "$ref": "#/definitions/pgtype.InfinityModifier"
                },
                "int": {
                    "$ref": "#/definitions/big.Int"
                },
                "naN": {
                    "type": "boolean"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        }
    }
}