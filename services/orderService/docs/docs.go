// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "email": "support@example.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/delivery-agent": {
            "get": {
                "description": "Fetches a list of all Delivery Agents from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DeliveryAgent CRUD"
                ],
                "summary": "Get all deliveryAgents",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/generated.Deliveryagent"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new deliveryAgent entry in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DeliveryAgent CRUD"
                ],
                "summary": "Create a new deliveryAgent",
                "parameters": [
                    {
                        "description": "DeliveryAgent object",
                        "name": "deliveryAgent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/generated.CreateDeliveryAgentParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/generated.Deliveryagent"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/delivery-agent/{deliveryAgentId}": {
            "get": {
                "description": "Fetches a deliveryAgent based on the id from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DeliveryAgent CRUD"
                ],
                "summary": "Get deliveryAgent by deliveryAgent id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "DeliveryAgent ID",
                        "name": "deliveryAgentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/generated.Deliveryagent"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/feedback": {
            "post": {
                "description": "Creates a new feedback entry in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feedback CRUD"
                ],
                "summary": "Create a new feedback",
                "parameters": [
                    {
                        "description": "Feedback object",
                        "name": "feedback",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/generated.CreateFeedbackParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/generated.Feedback"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/feedbacks": {
            "get": {
                "description": "Fetches a list of all feedbacks from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feedback CRUD"
                ],
                "summary": "Get all feedbacks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/generated.Feedback"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/feedbacks/{orderId}": {
            "get": {
                "description": "Fetches a feedback based on the order id from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Feedback CRUD"
                ],
                "summary": "Get feedback by order id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/generated.Feedback"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/order/bonus/{orderId}": {
            "get": {
                "description": "calculates the order bonus",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order Calculation Bonus"
                ],
                "summary": "calculate order bonus",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/generated.Order"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/order/consume": {
            "get": {
                "description": "Consume the created order for customer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order Broker"
                ],
                "summary": "Consume Order for a Customer",
                "responses": {
                    "200": {
                        "description": "Order Consumed Successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/order/status-agent/{orderId}": {
            "patch": {
                "description": "Updates the status of an order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order CRUD"
                ],
                "summary": "Update Order Status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New Order Status",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateOrderStatusRequestWithDeliveryAgentId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order status updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/order/status/{orderId}": {
            "patch": {
                "description": "Updates the status of an order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order CRUD"
                ],
                "summary": "Update Order Status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New Order Status",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateOrderStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order status updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/orders": {
            "get": {
                "description": "Fetches a list of all orders from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order CRUD"
                ],
                "summary": "Get all orders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/generated.Order"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/orders/{id}": {
            "get": {
                "description": "Fetches an order based on the id from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order CRUD"
                ],
                "summary": "Get order by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/generated.Order"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an order by its id from the database",
                "tags": [
                    "Order CRUD"
                ],
                "summary": "Delete an order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "generated.CreateDeliveryAgentParams": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "boolean"
                },
                "contactinfo": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                }
            }
        },
        "generated.CreateFeedbackParams": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "customerid": {
                    "type": "integer"
                },
                "deliveryagentrating": {
                    "type": "integer"
                },
                "orderid": {
                    "type": "integer"
                },
                "restaurantrating": {
                    "type": "integer"
                }
            }
        },
        "generated.Deliveryagent": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "boolean"
                },
                "contactinfo": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "rating": {
                    "type": "number"
                }
            }
        },
        "generated.Feedback": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "customerid": {
                    "type": "integer"
                },
                "deliveryagentrating": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "orderid": {
                    "type": "integer"
                },
                "restaurantrating": {
                    "type": "integer"
                }
            }
        },
        "generated.Order": {
            "type": "object",
            "properties": {
                "bonusid": {
                    "type": "integer"
                },
                "comment": {
                    "type": "string"
                },
                "customerid": {
                    "type": "integer"
                },
                "deliveryagentid": {
                    "type": "integer"
                },
                "feeid": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "paymentid": {
                    "type": "integer"
                },
                "restaurantid": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "totalamount": {
                    "type": "number"
                },
                "vatamount": {
                    "type": "number"
                }
            }
        },
        "handlers.UpdateOrderStatusRequest": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "Pending/On its way/Delivered"
                }
            }
        },
        "handlers.UpdateOrderStatusRequestWithDeliveryAgentId": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string",
                    "example": "Pending/On its way/Delivered"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8082",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Order Service API",
	Description:      "This is the API documentation for the Order Service.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
