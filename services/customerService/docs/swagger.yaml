definitions:
  generated.CreateCustomerParams:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phonenumber:
        type: string
      street_address:
        type: string
      zip_code:
        type: integer
    type: object
  generated.Customer:
    properties:
      addressid:
        type: integer
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      phonenumber:
        type: string
    type: object
  handlers.UpdateCustomerWithAddress:
    description: Update customer details including name, email, and address information.
    properties:
      city:
        example: New York
        type: string
      email:
        example: john.doe@example.com
        type: string
      name:
        example: John Doe
        type: string
      password:
        example: Password123!
        type: string
      phonenumber:
        example: "1234567890"
        type: string
      street_address:
        example: 123 Main St
        type: string
      zip_code:
        example: 12345
        type: integer
    type: object
host: localhost:8081
info:
  contact:
    email: support@example.com
    name: API Support
  description: This is the API documentation for the Customer Service.
  title: Customer Service API
  version: "1.0"
paths:
  /api/customer:
    get:
      description: Fetches a list of all customers from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/generated.Customer'
            type: array
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get all customers
      tags:
      - Customer CRUD
    post:
      consumes:
      - application/json
      description: Creates a new customer entry in the database
      parameters:
      - description: Customer object
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/generated.CreateCustomerParams'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/generated.Customer'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a new customer
      tags:
      - Customer CRUD
  /api/customer/{id}:
    delete:
      description: Deletes a customer based on the id from the database
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Customer deleted
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete customer
      tags:
      - Customer CRUD
    get:
      description: Fetches a customer based on the id from the database
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/generated.Customer'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get customer by Id
      tags:
      - Customer CRUD
    patch:
      consumes:
      - application/json
      description: Updates a customer's details based on the ID provided in the URL
        path. This may include personal information as well as optional address updates.
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated customer details
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateCustomerWithAddress'
      produces:
      - application/json
      responses:
        "200":
          description: Customer updated successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update a customer
      tags:
      - Customer CRUD
swagger: "2.0"
